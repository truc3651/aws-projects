version: 2.1

parameters:
  run-ec2:
    type: boolean
    default: false
  run-s3-backend:
    type: boolean
    default: false
  run-static-web:
    type: boolean
    default: false
  run-vpc-ec2:
    type: boolean
    default: false
  run-three-tier-application:
    type: boolean
    default: false
  # destroy
  destroy-ec2:
    type: boolean
    default: false
  destroy-s3-backend:
    type: boolean
    default: true
  destroy-static-web:
    type: boolean
    default: false
  destroy-vpc-ec2:
    type: boolean
    default: false
  destroy-three-tier-application:
    type: boolean
    default: false

jobs:
  print_hello:  
    docker:
      - image: circleci/python:3.8 
    steps:
      - run:
          name: Print Hello World
          command: echo "Hello World"

  terraform_plan:
    docker:
      - image: hashicorp/terraform:latest
    parameters:
      module:
        type: string
    steps:
      - checkout
      - run:
          name: terraform init
          command: terraform init
          working_directory: <<parameters.module>>/
      - run:
          name: terraform plan
          command: terraform plan -out plan.out
          working_directory: <<parameters.module>>/
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform_apply:
    docker:
      - image: hashicorp/terraform:latest
    parameters:
      module:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: terraform apply -auto-approve "plan.out"
          working_directory: <<parameters.module>>/
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform_plan_destroy:
    docker:
      - image: hashicorp/terraform:latest
    parameters:
      module:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform plan destroy
          command: terraform plan -destroy -out destroyPlan
          working_directory: <<parameters.module>>/
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform_destroy:
    docker:
      - image: hashicorp/terraform:latest
    parameters:
      module:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: terraform apply -auto-approve destroyPlan
          working_directory: <<parameters.module>>/

workflows:
  version: 2.1
  print_hello:
    jobs:
      - print_hello

  ec2:
    when: << pipeline.parameters.run-ec2 >>
    jobs:
      - terraform_plan:
          name: terraform_plan_ec2
          context: aws-credentials
          module: ec2
      - terraform_apply:
          name: terraform_apply_ec2
          context: aws-credentials
          module: ec2
          requires:
            - terraform_plan_ec2

  destroy-ec2:
    when: << pipeline.parameters.destroy-ec2 >>
    jobs:
      - terraform_plan_destroy:
          name: terraform_plan_destroy_ec2
          context: aws-credentials
          module: ec2
      - terraform_destroy:
          name: terraform_destroy_ec2
          context: aws-credentials
          module: ec2
          requires:
            - terraform_plan_destroy_ec2
      
  s3-backend:
    when: << pipeline.parameters.run-s3-backend >>
    jobs:
      - terraform_plan:
          name: terraform_plan_s3_backend
          context: aws-credentials
          module: s3-backend
      - terraform_apply:
          name: terraform_apply_s3_backend
          context: aws-credentials
          module: s3-backend
          requires:
            - terraform_plan_s3_backend

  destroy-s3-backend:
    when: << pipeline.parameters.destroy-s3-backend >>
    jobs:
      - terraform_plan_destroy:
          name: terraform_plan_s3_backend
          context: aws-credentials
          module: s3-backend
      - terraform_destroy:
          name: terraform_destroy_s3_backend
          context: aws-credentials
          module: s3-backend
          requires:
            - terraform_plan_s3_backend

  static-web:
    when: << pipeline.parameters.run-static-web >>
    jobs:
      - terraform_plan:
          name: terraform_plan_static_web
          context: aws-credentials
          module: static-web
      - terraform_apply:
          name: terraform_apply_static_web
          context: aws-credentials
          module: static-web
          requires:
            - terraform_plan_static_web

  destroy-static-web:
    when: << pipeline.parameters.destroy-static-web >>
    jobs:
      - terraform_plan_destroy:
          name: terraform_plan_destroy_static_web
          context: aws-credentials
          module: static-web
      - terraform_destroy:
          name: terraform_destroy_static_web
          context: aws-credentials
          module: static-web
          requires:
            - terraform_plan_destroy_static_web

  vpc-ec2:
    when: << pipeline.parameters.run-vpc-ec2 >>
    jobs:
      - terraform_plan:
          name: terraform_plan_vpc_ec2
          context: aws-credentials
          module: vpc-ec2
      - terraform_apply:
          name: terraform_apply_vpc_ec2
          context: aws-credentials
          module: vpc-ec2
          requires:
            - terraform_plan_vpc_ec2

  destroy-vpc-ec2:
    when: << pipeline.parameters.destroy-vpc-ec2 >>
    jobs:
      - terraform_plan_destroy:
          name: terraform_plan_destroy_vpc_ec2
          context: aws-credentials
          module: vpc-ec2
      - terraform_destroy:
          name: terraform_destroy_vpc_ec2
          context: aws-credentials
          module: vpc-ec2
          requires:
            - terraform_plan_destroy_vpc_ec2

  three-tier-application:
    when: << pipeline.parameters.run-three-tier-application >>
    jobs:
      - terraform_plan:
          name: terraform_plan_three_tier_application
          context: aws-credentials
          module: three-tier-application
      - terraform_apply:
          name: terraform_apply_three_tier_application
          context: aws-credentials
          module: three-tier-application
          requires:
            - terraform_plan_three_tier_application

  destroy-three-tier-application:
    when: << pipeline.parameters.destroy-three-tier-application >>
    jobs:
      - terraform_plan_destroy:
          name: terraform_plan_destroy_three_tier_application
          context: aws-credentials
          module: three-tier-application
      - terraform_destroy:
          name: terraform_destroy_three_tier_application
          context: aws-credentials
          module: three-tier-application
          requires:
            - terraform_plan_destroy_three_tier_application
